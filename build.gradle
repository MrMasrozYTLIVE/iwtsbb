plugins {
    id 'fabric-loom' version '1.7-SNAPSHOT'
    id("com.hypherionmc.modutils.modpublisher") version("2.1.7")
}

version = project.mod_version
group = project.maven_group

base {
    archivesName = project.archives_base_name
}


repositories {
//    maven { url 'https://maven.wispforest.io/releases/' }
    maven { url "https://maven.terraformersmc.com/" }

    exclusiveContent {
        forRepository {
            maven {
                name = "Modrinth"
                url = "https://api.modrinth.com/maven"
            }
        }
        filter {
            includeGroup "maven.modrinth"
        }
    }
}

loom {
    accessWidenerPath = file("src/main/resources/iwtsbb.accesswidener")
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    modImplementation("blue.endless:jankson:1.2.3")
    annotationProcessor modImplementation("maven.modrinth:owo-lib:${project.owo_version}")

    modImplementation("com.terraformersmc:modmenu:${project.modmenu_version}")
}

processResources {
    def expandProps = [
            "version": project.version,
            "loader_version": loader_version,
            "minecraft_version": minecraft_version,
            "owo_version": owo_version,
            "fabric_api": fabric_version
    ]

    filesMatching("fabric.mod.json") {
        expand expandProps
    }

    inputs.properties(expandProps)
}

def targetJavaVersion = 21
tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release.set(targetJavaVersion)
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }

    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

tasks.publishMod {
    dependsOn("build")
}

publisher {
    apiKeys {
        modrinth System.getenv().MODRINTH_TOKEN
        github System.getenv().GITHUB_TOKEN
    }

    setModrinthID(modrinth_id)

    setVersionType(release_type)
    setChangelog(file("changelog.md"))

    setProjectVersion(mod_version)
    setDisplayName("IWTSBB ${mod_version}")

    setGameVersions(List.of(minecraft_versions))

    setLoaders("fabric")
    setCurseEnvironment("client")

    setArtifact(remapJar)
    addAdditionalFile(sourcesJar)

    setDisableMalwareScanner(true)

    setJavaVersions(List.of(JavaVersion.VERSION_21))
    setDisableEmptyJarCheck(true)

//    debug.set(true)

    github {
        repo = "MrMasrozYTLIVE/iwtsbb"
        tag = "iwtsbb+${mod_version}"
        target = "master"
    }

    modrinthDepends {
        required "fabric-api", "owo-lib"
        optional 'modmenu'
    }
}